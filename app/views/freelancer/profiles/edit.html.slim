= render partial: "/freelancer/shared/profile_sub_nav"

- content_for :secondary do
  = simple_form_for(@freelancer, url: freelancer_profile_path) do |f|
    = f.hidden_field :enforce_profile_edit, value: true
    .action-bar
      h2.heading-h2.heading-h2--action-bar Edit Your Profile
      .action-bar__actions
        = f.button :submit, "Update", class: "btn btn--primary"
        a.btn.btn--secondary href=freelancer_profile_path Cancel


    .grid-h
      .grid-cell.grid-cell--33
        h2.heading-h2 Did you know? A profile pic says a 1000 words.
      .grid-cell.grid-cell--67
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--33
            .freelancer-profile__image style="width: 200px; height: 200px; margin: auto"
              = image_tag(@freelancer.avatar_url, id: "freelancer-edit-profile__avatar")
              .freelancer-profile__image-upload onclick="updateProfilePicture()"
                span class="zmdi zmdi-camera-add"
            = f.file_field :avatar, label: false, :accept => 'image/png,image/gif,image/jpeg', id: "edit-freelancer-profile-avatar", class: "file-input--hidden"

          .grid-cell.grid-cell--67
            .grid-h.grid-h--no-margin
              .grid-cell.grid-cell--100
                = f.input :name, required: true, label: "Full Name", placeholder: "Enter your Name."
              .grid-cell.grid-cell--100
                = f.input :email, as: :string, required: true, label: "Email Address", placeholder: "Email"
              .grid-cell.grid-cell--100
                = f.input :phone_number, as: :string, required: true, label: "Phone Number", placeholder: "Phone Number"
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Enter your address so we can find you the closest jobs.
      .grid-cell.grid-cell--67
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            = f.input :address, required: true, label: "Address", placeholder: "Address"
          .grid-cell.grid-cell--100
            = f.input :line2, required: false, label: "Address Line 2, Unit/Apt #", placeholder: "Address Line 2, Unit/Apt #"
          .grid-cell.grid-cell--50
            = f.input :city, as: :string, required: true, label: "City", placeholder: "City"
          .grid-cell.grid-cell--50
            = f.input :state, as: :string, required: true, label: "State/Province", placeholder: "State/Province"
          .grid-cell.grid-cell--50
            = f.input :postal_code, required: true, label: "ZIP/Postal Code", prompt: "ZIP/Postal Code"
          .grid-cell.grid-cell--50
            = f.input :country, required: true, label: "Select Country", prompt: "Select Country"
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Tell us about yourself, your skills and experience. AV Companies can't just hire a pretty face.
      .grid-cell.grid-cell--67
        .grid-v
          .grid-cell.grid-cell--100
            = f.input :tagline, required: true, label: "Describe yourself in one sentence, your \"tagline\"", placeholder: "Tagline"
          .grid-cell.grid-cell--100.grid-cell--expand
            = f.input :bio, label: "Close the deal with a killer biography", placeholder: "Write a bio", :input_html => { :class => 'form__profile-bio-textarea' }
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Details on how you operate your business will help cut through the clutter.
      .grid-cell.grid-cell--67
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            .form__field-label Availability for work
            .form__radio-group
              = f.radio_button(:available, true)
              | I am available for work
            .form__radio-group
              = f.radio_button(:available, false)
              | I am not available for work
          .grid-cell.grid-cell--100
            = f.input :service_areas, required: true, label: "Service regions", placeholder: "List the cites, boroughs, or towns you service (separate with commas)"
          .grid-cell.grid-cell--50
            = f.input :freelancer_type, required: true, label: "Freelancer Type", prompt: "Freelancer Type"
          .grid-cell.grid-cell--50
            = f.input :freelancer_team_size, required: true, label: "Team Size", prompt: "Team Size"

          .grid-cell.grid-cell--50
            = f.input :years_of_experience, label: "Years of Experience"

          .grid-cell.grid-cell--50
            = f.input :pay_per_unit_time, label: "Hourly Rate", placeholder: "Enter your rate"
          .grid-cell.grid-cell--50
            = f.input :pay_unit_time_preference, label: "Pay Preference", prompt: "Select"
          .grid-cell.grid-cell--50
            = f.input :sales_tax_number, required: false, label: "Sales tax number", placeholder: "Sales Tax No."
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 You've got skills! Check all that apply.
      .grid-cell.grid-cell--67
        .grid-v
          .grid-cell.grid-cell--100
            .form__field-label Specialties - Markets
            - if @freelancer.errors.full_messages.include?("Keywords can't be blank")
              .has-error
                .help-block
                  | One market must be selected.
            .freelancer-profile__checkboxes
              - I18n.t('enumerize.freelancer_keywords').each do |index, value|
                - tag_name = "freelancer[keywords][#{index.to_s}]"
                - if @freelancer.keywords and @freelancer.keywords.include?(index.to_s)
                  - checked = true
                - else
                  - checked = false
                .freelancer-profile__checkbox
                  = check_box_tag tag_name, "1", checked
                  = " #{value}"
          .grid-cell.grid-cell--100
            .form__field-label Specialties - Skills
            - if @freelancer.errors.full_messages.include?("Skills can't be blank")
              .has-error
                .help-block
                  | One market must be selected.
            .freelancer-profile__checkboxes
              - I18n.t('enumerize.freelancer_skills').each do |index, value|
                - tag_name = "freelancer[skills][#{index.to_s}]"
                - if @freelancer.skills and @freelancer.skills.include?(index.to_s)
                  - checked = true
                - else
                  - checked = false
                .freelancer-profile__checkbox
                  = check_box_tag tag_name, "1", checked
                  = " #{value}"
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 A virtual wall for all the certificates you've earned.
      .grid-cell.grid-cell--67
        .grid-v
          .grid-cell.grid-cell--100
            .form__field-label Accreditation
            = f.simple_fields_for :certifications do |certification_form|
              = render "certification_fields", f: certification_form
            .links.add-new-certificate
              = link_to_add_association 'Add Another', f, :certifications, class: "btn btn--secondary"
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Make it personal with a background image that captures you best.
      .grid-cell.grid-cell--67
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            .form__field-label Wallpaper
            .freelancer-profile__image--header
              = image_tag(@freelancer.profile_header_url, id: "freelancer-edit-profile__header")
              .freelancer-profile__image-upload onclick="updateHeaderImage()"
                span class="zmdi zmdi-camera-add"
            = f.file_field :profile_header, label: false, :accept => 'image/png,image/gif,image/jpeg', id: "edit-freelancer-profile-header", class: "file-input--hidden"
          .grid-cell.grid-cell--50
            = f.input :header_color, required: true, placeholder: "Use a hex color", label: "Wallpaper Color"
          .grid-cell.grid-cell--50
            = f.input :header_source, label: "Display color/wallpaper in header", prompt: "Select"
      .grid-cell.grid-cell--33
      .grid-cell.grid-cell--67
        .buttons
          = f.button :submit, "Update", class: "btn btn--primary"
          a.btn.btn--secondary href=freelancer_profile_path Cancel

javascript:
  var updateHeaderImage = function() {
    $("#edit-freelancer-profile-header").click();
    $("#edit-freelancer-profile-header").on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#freelancer-edit-profile__header");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  var updateProfilePicture = function() {
    $("#edit-freelancer-profile-avatar").click();
    $("#edit-freelancer-profile-avatar").on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#freelancer-edit-profile__avatar");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }


  function uploadCertificate (index) {
    if (index != undefined) {
      var ref = $("#freelancer_certifications_attributes_"+index+"_certificate");
    } else {
      var ref = $(".add-new-certificate").prev('div').find(".profile__meta__info").find(".file-input--hidden");
    }

    ref.on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $(this).parent().parent().find(".freelancer-profile__image").find(".authorable_attachment--full").find("img");
      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else if (extn == "pdf") {
        image_holder.attr('src', "/assets/certification/certification_placeholder.png")
      } else {
        alert("Only images can be selected.");
      }
    });

    ref.click();
  }

