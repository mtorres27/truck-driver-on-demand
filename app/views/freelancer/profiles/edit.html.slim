= render partial: "/freelancer/shared/profile_sub_nav"
- content_for :title, "Edit Profile"
- content_for :secondary do
  .result-wrapper
    .result-header
      .result-header__text
        | Edit Freelancer Profile

    .result-content
      = simple_form_for(@freelancer, url: freelancer_profile_path) do |f|
        = f.hidden_field :enforce_profile_edit, value: true

        .freelancer-profile__item
          .freelancer-profile__title
            | Wallpaper

          .freelancer-profile__image--header
            = image_tag(@freelancer.profile_header_url, id: "freelancer-edit-profile__header")
            .freelancer-profile__image-upload onclick="updateHeaderImage()"
              span class="fa fa-camera"
          = f.file_field :profile_header, label: false, :accept => 'image/png,image/gif,image/jpeg', id: "edit-freelancer-profile-header", class: "file-input--hidden"
        br
        br
        .freelancer-profile__item
          .freelancer-profile__title
            | Wallpaper Colour
          = f.input :header_color, required: true, label: false, placeholder: "FF6C38"

        .freelancer-profile__item
          .freelancer-profile__title
            | Header Source
          = f.input :header_source, label: false, prompt: "Select"

        .freelancer-profile__item
          .freelancer-profile__title
            | Profile Picture
          .freelancer-profile__image style="width: 135px; height: 135px; margin: auto"
            = image_tag(@freelancer.avatar_url, id: "freelancer-edit-profile__avatar")
            .freelancer-profile__image-upload onclick="updateProfilePicture()"
              span class="fa fa-camera"
          = f.file_field :avatar, label: false, :accept => 'image/png,image/gif,image/jpeg', id: "edit-freelancer-profile-avatar", class: "file-input--hidden"


        .freelancer-profile__item
          .freelancer-profile__title
            | Name
          = f.input :name, required: true, label: false, placeholder: "Enter your Name."

        .freelancer-profile__item
          .freelancer-profile__title
            | Email
          = f.input :email, as: :string, required: true, label: false, placeholder: "Email"

        .freelancer-profile__item
          .freelancer-profile__title
            | Phone Number
          = f.input :phone_number, as: :string, required: true, label: false, placeholder: "Phone Number"

        .freelancer-profile__item
          .freelancer-profile__title
            | Address
          = f.input :address, required: true, label: false, placeholder: "Address"

        .freelancer-profile__item
          .freelancer-profile__title
            | Address Line 2
          = f.input :line2, required: false, label: false, placeholder: "Address Line 2, Unit/Apt #"

        .freelancer-profile__item
          .freelancer-profile__title
            | City
          = f.input :city, as: :string, required: true, label: false, placeholder: "City"

        .freelancer-profile__item
          .freelancer-profile__title
            | State/Province
          = f.input :state, as: :string, required: true, label: false, placeholder: "State/Province"

        .freelancer-profile__item
          .freelancer-profile__title
            | ZIP/Postal Code
          = f.input :postal_code, required: true, label: false, prompt: "ZIP/Postal Code"

        .freelancer-profile__item
          .freelancer-profile__title
            | Country
          = f.input :country, required: true, label: false, prompt: "Select Country"


        .freelancer-profile__item
          .freelancer-profile__title
            | Sales Tax No.
          = f.input :sales_tax_number, required: false, label: false, placeholder: "Sales Tax No."

        .freelancer-profile__item
          .freelancer-profile__title
            | Tagline
          = f.input :tagline, required: true, label: false, placeholder: "Tagline"

        .freelancer-profile__item
          .freelancer-profile__title
            | Type
          = f.input :freelancer_type, required: true, label: false, prompt: "Freelancer Type"

        .freelancer-profile__item
          .freelancer-profile__title
            | Team Size
          = f.input :freelancer_team_size, required: true, label: false, prompt: "Team Size"

        .freelancer-profile__item
          .freelancer-profile__title
            | Biography
          = f.input :bio, label: false, placeholder: "Write a bio"

        .freelancer-profile__item
          .freelancer-profile__title
            | Service Areas
          = f.input :service_areas, required: true, label: false, placeholder: "Service Areas"

        .freelancer-profile__item
          .freelancer-profile__title
            | Specialties - Markets
          - if @freelancer.errors.full_messages.include?("Keywords can't be blank")
            .has-error
              .help-block
                | One market must be selected.
          .freelancer-profile__checkboxes
            - I18n.t('enumerize.freelancer_keywords').each do |index, value|
              - tag_name = "freelancer[keywords][#{index.to_s}]"
              - if @freelancer.keywords and @freelancer.keywords.include?(index.to_s)
                - checked = true
              - else
                - checked = false
              .freelancer-profile__checkbox
                = check_box_tag tag_name, "1", checked
                = " #{value}"

        .freelancer-profile__item
          .freelancer-profile__title
            | Specialties - Skills
          - if @freelancer.errors.full_messages.include?("Skills can't be blank")
            .has-error
              .help-block
                | One market must be selected.
          .freelancer-profile__checkboxes
            - I18n.t('enumerize.freelancer_skills').each do |index, value|
              - tag_name = "freelancer[skills][#{index.to_s}]"
              - if @freelancer.skills and @freelancer.skills.include?(index.to_s)
                - checked = true
              - else
                - checked = false
              .freelancer-profile__checkbox
                = check_box_tag tag_name, "1", checked
                = " #{value}"

        .freelancer-profile__item
          .freelancer-profile__title
            | Years of Experience
          = f.input :years_of_experience, label: false

        .freelancer-profile__item
          .freelancer-profile__title
            | Availability

          = f.radio_button(:available, true)
          | I am available for work
          br
          = f.radio_button(:available, false)
          | I am not available for work
          p style="height: 10px;"

        .freelancer-profile__item
          .freelancer-profile__title
            | Rate
          = f.input :pay_per_unit_time, label: false, placeholder: "Enter your rate"

        .freelancer-profile__item
          .freelancer-profile__title
            | Pay Preference
          = f.input :pay_unit_time_preference, label: false, prompt: "Select"

        .freelancer-profile__item
          .freelancer-profile__title
            | Accreditation
          = f.simple_fields_for :certifications do |certification_form|
            = render "certification_fields", f: certification_form
          .links.add-new-certificate
            = link_to_add_association 'Add Another', f, :certifications, class: "btn btn-default"


        p style="height: 20px;"

        .form-actions
          = f.button :submit, class: "btn-primary--active", label: "Update Profile"
          a.btn-ghost--active.margin-8px href=freelancer_profile_path
            | Cancel

javascript:
  var updateHeaderImage = function() {
    $("#edit-freelancer-profile-header").click();
    $("#edit-freelancer-profile-header").on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#freelancer-edit-profile__header");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  var updateProfilePicture = function() {
    $("#edit-freelancer-profile-avatar").click();
    $("#edit-freelancer-profile-avatar").on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#freelancer-edit-profile__avatar");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  function uploadCertificate (index) {
    if (index != undefined) {
      var ref = $("#freelancer_certifications_attributes_"+index+"_certificate");
    } else {
      var ref = $(".add-new-certificate").prev('div').find(".nested_fields").find(".file-input--hidden");
    }

    ref.on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $(this).parent().parent().find(".freelancer-profile__image").find(".authorable_attachment--full").find("img");
      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else if (extn == "pdf") {
        image_holder.attr('src', "/assets/certification/certification_placeholder.png")
      } else {
        alert("Only images can be selected.");
      }
    });

    ref.click();
  }

