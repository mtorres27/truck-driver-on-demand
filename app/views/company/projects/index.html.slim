.header-bar
  h1.heading-h1 Job Postings
  - if ['trialing', 'active'].include?(current_user.company_data.subscription_status) || (current_user.company_data.subscription_status == "cancelled" && current_user.company_data.billing_period_ends_at > Time.now.to_i)
    = link_to "Post a Job", new_company_job_path, class: "btn btn--primary", role: "button"
  - else
    = link_to "Choose a plan to post jobs", company_plans_path, class: "btn btn--primary", role: "button"

- content_for :secondary do
  .action-bar
    .action-bar__actions
      .btn.btn--secondary type="button" onClick="toggleJobs(this)" data-action="show"
        | Expand All

  .grid-h
    - @projects.each do |project|
      .grid-cell.grid-cell--100
        .header-bar
          h3.heading-h3
            = "#{project.name} - #{project.external_project_id || project.id} "
            = link_to content_tag(:span, "", class:"fa fa-pencil"), edit_company_project_path(project), class: "project_edit_link"
          .btn.btn--secondary data-toggle="collapse" data-target="#jobsFor#{project.id}" type="button" aria-expanded="false" aria-controls="jobsFor#{project.id}"
            | #{project.jobs.size} Jobs
      .grid-cell.grid-cell--100
        .collapse.jobs( id="jobsFor#{project.id}" )
          .grid-h
            - project.jobs.each do |job|
              = render partial: "job", locals: { project: project, job: job }

    = paginate @projects

javascript:
  var jobs = document.getElementsByClassName("jobs")

  var toggleJobs = function(caller) {
    show = caller.dataset.action == "show"
    if (show) {
      caller.innerText = caller.innerText.replace("EXPAND", "HIDE")
      caller.dataset.action = "hide"
    } else {
      caller.innerText = caller.innerText.replace("HIDE", "EXPAND")
      caller.dataset.action = "show"
    }

    filteredJobs = Array.prototype.filter.call(jobs, function(job) {
      return (show && !job.classList.contains("in")) || (!show && job.classList.contains("in"))
    })

    filteredJobs.forEach(function(ele) {
      if (show) {
        ele.classList.add("in")
      } else {
        ele.classList.remove("in")
      }
    })
  }
