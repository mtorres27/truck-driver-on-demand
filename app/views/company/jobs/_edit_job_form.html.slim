- controller = current_admin.nil? ? :company : :admin
= simple_form_for([controller, @job]) do |f|
  .grid-h
    .grid-cell.grid-cell--67
      .grid-v
        .grid-cell.grid-cell--100
          .grid-h.grid-h--no-margin
            .grid-cell.grid-cell--75
              = f.association :project, collection: @company.projects, prompt: "Select"
            .grid-cell.grid-cell--25.grid-cell--span25
              br
              .form-button
                .btn.btn--secondary type="button" data-toggle="modal" data-target="#new_project"
                  | New Project
        .grid-cell.grid-cell--100
          = f.input :title, placeholder: "Enter the job title"
        .grid-cell.grid-cell--100
          = f.input :address, placeholder: "Enter City", label: "City"
        .grid-cell.grid-cell--100
          = f.input :state_province, placeholder: "Enter State/Province", label: "State/Province"
        .grid-cell.grid-cell--100
          = f.input :country, prompt: "Select"
        .grid-cell.grid-cell--100
          span
            abbr title="required"= "*"
            = " "
            = f.label :summary, "Summary"
          = f.input :summary, label: false, placeholder: "Enter the job summary"
        .grid-cell.grid-cell--100
          span
            abbr title="required"= "*"
            = " "
            = f.label :summary, "Scope of Work"
          = f.input :scope_of_work, label: false, placeholder: "Please enter in more details about the job to receive a better quote."
        .grid-cell.grid-cell--100
          = f.input :scope_file, as: :file, label: "Scope of Work File"
          - if !@job.scope_file.nil?
            | Currently Selected:
            a href=@job.scope_file_url target="_blank"
              = @job.scope_file.original_filename
        .grid-cell.grid-cell--100
          = f.label :summary, "Technical skills required for this job"
          - if @job.errors.full_messages.include?("Technical skill tags can't be blank")
            .has-error
              .help-block
                | One skill must be selected.
          .freelancer-profile__checkboxes
            - I18n.t('enumerize.technical_skill_tags').each do |index, value|
              - tag_name = "job[technical_skill_tags][#{index.to_s}]"
              - if !@job.technical_skill_tags.nil? and @job.technical_skill_tags.include?(index.to_s)
                - checked = true
              - else
                - checked = false
              .freelancer-profile__checkbox
                = check_box_tag tag_name, "1", checked
                = " #{value}"
        .grid-cell.grid-cell--100
          = f.label :summary, "Manufacturer skills required for this job"
          - if @job.errors.full_messages.include?("Manufacturer tags can't be blank")
            .has-error
              .help-block
                | One skill must be selected.
          .freelancer-profile__checkboxes
            - I18n.t('enumerize.manufacturer_tags').each do |index, value|
              - tag_name = "job[manufacturer_tags][#{index.to_s}]"
              - if !@job.manufacturer_tags.nil? and @job.manufacturer_tags.include?(index.to_s)
                - checked = true
              - else
                - checked = false
              .freelancer-profile__checkbox
                = check_box_tag tag_name, "1", checked
                = " #{value}"
    .grid-cell.grid-cell--33
      .grid-v
        .grid-cell.grid-cell--100
          = f.input :budget, placeholder: "Enter a budget", input_html: {value: number_with_precision(f.object.budget, precision: 2)}
        .grid-cell.grid-cell--100
          = f.input :budget_is_public
        .grid-cell.grid-cell--100
          = f.input :currency, required: true, as: :select
        .grid-cell.grid-cell--100
          = f.input :job_type, prompt: "Select"
        .grid-cell.grid-cell--100
          = f.label :job_market
          select#job_job_market.form-control.select(name='job[job_market]')
            option(value='')
              | Select
            = I18n.t("enumerize.live_events_staging_and_rental_job_markets").each do |index, value|
              - selected = (!@job.job_market.nil? and @job.job_market == index.to_s)
              - if selected
                option.job_live_events_staging_and_rental_option(value="#{index}" selected)
                  = value
              - else
                option.job_live_events_staging_and_rental_option(value="#{index}")
                  = value
            = I18n.t("enumerize.system_integration_job_markets").each do |index, value|
              - selected = (!@job.job_market.nil? and @job.job_market == index.to_s)
              - if selected
                option.job_system_integration_option(value="#{index}" selected)
                  = value
              - else
                option.job_system_integration_option(value="#{index}")
                  = value
        .grid-cell.grid-cell--100
          = f.label :job_function
          select#job_job_function.form-control.select(name='job[job_function]')
            option(value='')
              | Select
            = I18n.t("enumerize.live_events_staging_and_rental_job_functions").each do |index, value|
              - selected = (!@job.job_function.nil? and @job.job_function == index.to_s)
              - if selected
                option.job_live_events_staging_and_rental_option(value="#{index}" selected)
                  = value
              - else
                option.job_live_events_staging_and_rental_option(value="#{index}")
                  = value
            = I18n.t("enumerize.system_integration_job_functions").each do |index, value|
              - selected = (!@job.job_function.nil? and @job.job_function == index.to_s)
              - if selected
                option.job_system_integration_option(value="#{index}" selected)
                  = value
              - else
                option.job_system_integration_option(value="#{index}")
                  = value
        .grid-cell.grid-cell--100
          = f.input :starts_on, html5: true
        .grid-cell.grid-cell--100
          = f.input :duration, placeholder: "Number of days"
        .grid-cell.grid-cell--100
          = f.input :pay_type, prompt: "Select", label: "Preferred Pay Type"
        .grid-cell.grid-cell--100
          = f.input :freelancer_type, prompt: "Select"
    .grid-cell.grid-cell--100
      .buttons
        - if @job.created?
          = f.button :button, "Publish", name: "job[state]", value: "published", class: "btn btn--primary"
          = f.button :submit, "Save as Draft", class: "btn btn--secondary"
        - else
          = f.button :submit, "Save", class: "btn btn--primary"
        - unless @job.new_record?
          .btn.btn--secondary
            = link_to "Delete Job", company_job_path(@job), data: {confirm: "Are you sure you want to permanently delete this job posting?", class: "btn btn--secondary"}, method: :delete


.modal#new_project role="dialog" tabindex="-1"
  .modal-dialog role="document"
    .modal-content
      = simple_form_for([:company, @company.projects.new], remote: true) do |f|
        .modal-header
          h2 Create a New Project
        .container
          .grid-h
            .grid-cell.grid-cell--100
              = f.input :name, placeholder: "Enter the project name"
            .grid-cell.grid-cell--100
              = f.input :external_project_id, placeholder: "Enter the project number"
            .grid-cell.grid-cell--100
              .buttons
                = f.button :submit, class: "btn btn--primary"
                a.btn.btn--secondary data-dismiss="modal" href="#"
                  | Cancel

  javascript:
    function get_currencies(country) {
      $.get("#{job_country_currency_path}", {country: country})
              .done(function (data) {
                var select = $('#job_currency');
                select.empty().append(data);
              });
    }

    $(document).ready(function () {
      if ($('#job_country').val() != "") {
        get_currencies($('#job_country').val())
      }
      $('#job_country').on('change', function () {
        get_currencies($(this).val())
      });
    });