- content_for :secondary do
  .action-bar
    h2.heading-h2.heading-h2--action-bar Edit Work Order
    .action-bar__actions

  - path = current_user.admin? ? admin_job_work_order_path(@job) : company_job_work_order_path(@job)
  = simple_form_for(@job, url: path) do |f|
    = f.hidden_field :enforce_contract_creation, value: true
    .grid-h
      .grid-cell.grid-cell--33
        = render partial: "company/shared/contract_meta", locals: { job: @job }

      .grid-cell.grid-cell--33
        h3.heading-h3 Project Reference
        p
          - if current_user.company_user?
            a href=company_projects_path()
              = project_reference(@job.project)
          - else
            = project_reference(@job.project)
      .grid-cell.grid-cell--expand
        h3.heading-h3 Job Title
        p
          - path = current_user.company_user? ? company_jobs_path(@job) : admin_jobs_path(@job)
          a href=path
            = @job.title

    .grid-h
      .grid-cell.grid-cell--33
        = f.label "Freelancer", required: true
        select.form-control.form__select-field name="job[accepted_applicant_id]" id="job_accepted_applicant_id"
          option value=""
            | Select
          - @job.applicants.each do |applicant|
            - if @job.freelancer&.id == applicant.freelancer.id
              option value=applicant.id selected="true"
                | #{ applicant.freelancer.first_name_and_initial }
            - else
              option value=applicant.id
                | #{ applicant.freelancer.first_name_and_initial }
      .grid-cell.grid-cell--33
        = f.input :pay_type, required: true, prompt: "Select", label: "Payment Type", input_html: { class: 'form__select-field js--contract-payment-type' }

      .grid-cell.grid-cell--33.js--contract-variable-payment-type-div
        = f.input :variable_pay_type, required: true, prompt: "Select", label: "Variable Payment Type", input_html: {class: 'form__select-field js--contract-variable-payment-type'}

      .grid-cell.grid-cell--33
        = f.label "Contract Price", required: true, class: "js--contract-price-label"
        = f.input :contract_price, required: true, label: false, input_html: { class: 'form__text-field' }
        .job-details__price-status
          = ""

      .grid-cell.grid-cell--33.js--contract-overtime-rate-div
        = f.input :overtime_rate, required: true, label: "Overtime Rate", input_html: {class: 'form__text-field js--contract-overtime-rate'}

      .grid-cell.grid-cell--33
        = f.input :applicable_sales_tax, html5: true, label: "Applicable Sales Tax (%)", input_html: { class: 'form__text-field', value: @job.applicable_sales_tax || 0 }
        .form__field-helper-text
          | If the freelancer collects sales tax, be sure to ask them what amount of tax this is. The rate of tax entered here will be reflected in your invoices.

      .grid-cell.grid-cell--33
        = f.input :payment_terms, required: true, label: "Payment terms (in days)", input_html: {class: 'form__text-field'}

      .grid-cell.grid-cell--33
        = f.input :starts_on, html5: true, label: "Start Date (Estimated)", input_html: { class: 'form__text-field'}

      .grid-cell.grid-cell--33
        = f.input :ends_on, html5: true, label: "End date (estimated)", input_html: { class: 'form__text-field'}

      .grid-cell.grid-cell--33
        = f.input :working_time, prompt: "Select", label: "Acceptable Working Hours"



      .grid-cell.grid-cell--100#payments
        div
          .form__field-label
            | Payment Schedule
          = f.simple_fields_for :payments do |payment_form|
            = render "payment_fields", f: payment_form
          .buttons
            = link_to_add_association 'Add Schedule Item', f, :payments, class: "btn btn--primary js--payment-add-button"

      .grid-cell.grid-cell--100
        .form__field-label
          | Reporting Requirements
        = f.input :reporting_frequency, as: :radio_buttons, item_wrapper_class: "inline", label: false
        = f.input :require_photos_on_updates
        = f.input :require_checkin
        = f.input :require_uniform

      .grid-cell.grid-cell--100.job-details
        #featured_projects
          .form__field-label
            | Addenda
          = f.simple_fields_for :attachments do |attachment_form|
            = render "attachment_fields", f: attachment_form
          .buttons.add-new-addendum
            = link_to_add_association 'Add Addendum', f, :attachments, class: "btn btn--primary"

      .grid-cell.grid-cell--100
        .form__field-label
          | Freelancer Agreements
        p
          a href="/freelance-service-agreement?job=#{@job.id}#{random_append}" target="_blank"
            | Freelance Service Agreement
        p
          | AV Junction provides a template freelance service agreement for you to use at your sole discretion.  This template agreement does not bind AV Junction Inc to this work order.  This work order is between you and the hired AV freelancer.  If you would like to opt out of using this template please check the box.
          = f.input :opt_out_of_freelance_service_agreement, label: "Opt out of Freelance Service Agreement"

      .grid-cell.grid-cell--100
        .form__field-label
          | About Insurance
        p
          | Please be advised that AV Junction does not provide any insurance for AV Companies or Freelancers. Each User, at its sole cost and expense, will maintain appropriate insurance.

      .grid-cell.grid-cell--100
        - if @job.pre_contracted?
          .buttons
            =f.submit "Send Work Order", class: "btn btn--primary"
