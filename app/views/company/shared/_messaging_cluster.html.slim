- if @applicant
  = simple_form_for(:message, url: company_job_applicant_quotes_path(@job, @applicant)) do |f|
    .applicant-messages__messages
      - if @all_quotes.where({state: "accepted"}).length == 0
        = render partial: "company/shared/new_message", locals: { f: f, n: @applicant.freelancer.name, type: "quote", quotes: @quotes }
      - else
        .new-message--wrapper
          .new-message_amount
            .new-message__freelancer-selected
              .new-message__freelancer-selected__avatar
                = image_tag(@job.freelancer.avatar_url, size: "65x65")

              .new-message__freelancer-selected__text
                b
                  = "Congratulations, you've selected #{@job.freelancer.name} for this job."
                p
                  = "The next step is to create a work order with #{@job.freelancer.name}. We've made this super simple by doing all the hard work for you. "
                  = "Simply click the button below to proceed to creating a work order."

                div
                a.btn.btn--primary href=company_job_work_order_path(@job)
                  | view Work Order
      .applicant-messages__messages--inner class=("applicant-messages__messages--inner--inactive" if @applicant_accepted == true)
        - @harmonized_items.each_with_index do |item, index|
          - if item[:type] == "message"
            .list-item.list-item--message
              .list__info
                = image_tag(item[:payload].authorable.avatar_url, size: "40x40")
              .list__info.list__info--expand.list__info--with-padding
                .list-bar.list-bar--left
                  h4.heading-h4.heading-h4--no-margin #{item[:payload].authorable.name}
                  | &nbsp;
                  - if !item[:payload].created_at.nil?
                    h5.heading-h5 #{time_ago_in_words(item[:payload].created_at)} ago
                p
                  = item[:payload].body
                  - if item[:payload].attachment_url
                    .list__info.list__info--with-padding
                      - if item[:payload].attachment_url
                        a href=item[:payload].attachment_url target="_blank"
                          - if is_image(item[:payload].attachment_url)
                            span class="zmdi zmdi-image"
                          - else
                            span class="zmdi zmdi-file-text"
                          |  
                          = eval(item[:payload].attachment_data)[:metadata][:filename]   
              .list__info
                - if index > 0
                  - next_item = @harmonized_items[index-1] 
                  - if next_item.nil? or next_item[:type] == "message"
                    - next_item = @harmonized_items[index+1] 
                  - if !next_item.nil? and next_item[:type] == "quote"

                    div.quote_amount class=("quote_amount--declined" if next_item[:payload].state == "declined")
                      = number_with_precision(next_item[:payload].amount, precision: 0).to_s + " " + (job.currency ? job.currency.upcase : "")
                    .quote_pay_type= next_item[:payload].pay_type.text
                    - if next_item[:payload].pay_type == "hourly"
                      = "(#{next_item[:payload].number_of_hours} hours @ #{next_item[:payload].hourly_rate} #{job.currency ? job.currency.upcase : ""}/hour)"
                    - if next_item[:payload].pay_type == "daily"
                      = "(#{next_item[:payload].number_of_days} days @ #{next_item[:payload].daily_rate} #{job.currency ? job.currency.upcase : ""}/day)"
                    - if next_item[:payload].fixed? && next_item[:payload].amount > @job.budget
                      .quote_over-budget= "Over Budget"
                    - elsif next_item[:payload].fixed? && next_item[:payload].amount < @job.budget
                      .quote_under-budget= "Under Budget"
                    - elsif next_item[:payload].pending?
                      - if next_item[:payload].fixed? && next_item[:payload].amount > @job.budget
                        .quote_over-budget= "Over Budget"
                      - elsif next_item[:payload].fixed? && next_item[:payload].amount < @job.budget
                        .quote_under-budget= "Under Budget"
                      - elsif next_item[:payload].amount < @job.budget
                        .quote_under-budget= "Under Budget"
                      - elsif next_item[:payload].amount < @job.budget
                        .quote_over-budget= "Over Budget"

                    - if next_item[:payload].attachment_url
                      a.authorable_attachment href=next_item[:payload].attachment_url target="_blank"
                        - if is_image(next_item[:payload].attachment_url)
                          span class="authorable_attachment_icon fa fa-image"
                        - else
                          span class="authorable_attachment_icon fa fa-file-text"
                        .authorable_attachment__filename
                          = eval(next_item[:payload].attachment_data)[:metadata][:filename]

              / - @harmonized_items.each_with_index do |item, index|
              / - if item[:type] == "message"
              /   .freelancer-job__quote-msg
              /     .common__user-avatar style="background-image: url(#{item[:payload].authorable.avatar_url})"
              /     .freelancer-job__msg-cont.w-clearfix
              /       - if index <= @harmonized_items.count - 1
              /         - next_item = @harmonized_items[index+1]  
              /         - if next_item.nil? or next_item[:type] == "message"
              /           - next_item = @harmonized_items[index-1]   

            / .media
            /   .media-left
            /     .freelancer_avatar
            /       = image_tag(item[:payload].authorable.avatar_url, size: "40x40")
            /   .media-body
            /     span.authorable_name #{item[:payload].authorable.name}
            /     - if !item[:payload].created_at.nil?
            /       span.authorable_date #{time_ago_in_words(item[:payload].created_at)} ago
            /     .authorable_body= item[:payload].body
            /     - if item[:payload].attachment_url
            /       a.authorable_attachment href=item[:payload].attachment_url target="_blank"
            /         - if is_image(item[:payload].attachment_url)
            /           span class="authorable_attachment_icon fa fa-image"
            /         - else
            /           span class="authorable_attachment_icon fa fa-file-text"
            /         .authorable_attachment__filename
            /           = eval(item[:payload].attachment_data)[:metadata][:filename]

          / - if item[:type] == "quote"
          /   .media
          /     | QUOTE
          /     .media-body
          /       div.quote_amount class=("quote_amount--declined" if item[:payload].state == "declined")
          /         = number_with_precision(item[:payload].amount, precision: 2).to_s + " " + (job.currency ? job.currency.upcase : "")
          /       .quote_pay_type= item[:payload].pay_type.text
          /       - if item[:payload].pay_type == "hourly"
          /         = "(#{item[:payload].number_of_hours} hours @ #{item[:payload].hourly_rate} #{job.currency ? job.currency.upcase : ""}/hour)"
          /       - if item[:payload].pay_type == "daily"
          /         = "(#{item[:payload].number_of_days} days @ #{item[:payload].daily_rate} #{job.currency ? job.currency.upcase : ""}/day)"
          /       - if item[:payload].fixed? && item[:payload].amount > @job.budget
          /         .quote_over-budget= "Over Budget"
          /       - elsif item[:payload].fixed? && item[:payload].amount < @job.budget
          /         .quote_under-budget= "Under Budget"
          /       - elsif item[:payload].pending?
          /         - if item[:payload].fixed? && item[:payload].amount > @job.budget
          /           .quote_over-budget= "Over Budget"
          /         - elsif item[:payload].fixed? && item[:payload].amount < @job.budget
          /           .quote_under-budget= "Under Budget"
          /         - elsif item[:payload].amount < @job.budget
          /           .quote_under-budget= "Under Budget"
          /         - elsif item[:payload].amount < @job.budget
          /           .quote_over-budget= "Over Budget"

  - if @quotes.length > 0
    .modal__accept-quote
      .modal__accept-quote__content
        .modal__accept-quote__content__header
          .modal__accept-quote__content__header__text
            = "Accept #{number_with_precision(@quotes.where({applicant_id: @applicant.id}).first.amount, precision: 2)} #{(job.currency ? job.currency.upcase : "")}"
        .modal__accept-quote__content__body
          b
            | CONGRATULATIONS, YOU'VE FOUND YOUR FREELANCER.
          p
            = "The next step is to create a work order with #{@applicant.freelancer.name}. We've made this super simple by doing all the hard work for you. "
            | "Simply click the button below to proceed to creating a work worder. If you don't have the time right now you can find this in the job details section."
          p
            em
              = "Remember, by accepting this quote of #{number_with_precision(@quotes.where({applicant_id: @applicant.id}).first.amount, precision: 2)} #{(job.currency ? job.currency.upcase : "")}  with #{@applicant.freelancer.name}, all other applications for this"
              = " job will automatically be declined, and receive a general notification informing them the job has been filled. Details of who you've selected will not be shared."
          .buttons
            .accept_button.btn.btn--primary
              | Accept
            .cancel_button.btn.btn--secondary
              | Cancel



    .modal__decline-quote
      .modal__decline-quote__content
        .modal__decline-quote__content__header
          .modal__decline-quote__content__header__text
            = "Decline Quote of #{@quotes.where({applicant_id: @applicant.id}).first.amount}"
        .modal__decline-quote__content__body
          b
            | YOU HAVE DECIDED TO DECLINE THIS QUOTE

          p
            | Declining this quote will notify the freelancer of your decision. However, they still have the option to offer another quote.

          .buttons
            .decline_button.btn.btn--primary
              | Decline Quote
            .cancel_button.btn.btn--secondary
              | Cancel

  javascript:
    $(".accept_button").on('click', function() {
      $("input[name='message[override]']").val("true");
      $("form").submit();
    });

    $(".decline_button").on('click', function() {
      $("input[name='message[override]']").val("true");
      $("form").submit();
    });

    $(".cancel_button").on('click', function() {
      $(".modal__accept-quote").removeClass("modal--visible");
      $(".modal__decline-quote").removeClass("modal--visible");

      $("input[name='message[override]']").val("");
      $("#new-message__submit").attr('disabled', false);
    })