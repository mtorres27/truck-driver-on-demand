- has_avatar_class = freelancer.avatar_url == "avatar/missing.png"  ? "freelancer_without_avatar" : "freelancer_with_avatar"
a.list-item.list-item--freelancer href="/company/freelancers/#{freelancer.id}" class="#{has_avatar_class}"

  .list__img class="#{freelancer.avatar_data.present? ? "" : "initials__img"}"
    - if is_favourite(freelancer)
      .list__fav
        span.zmdi.zmdi-favorite
    - if freelancer.avatar_data.present?
      .list__img-overlay
      = image_tag(freelancer.avatar_url, size: "75x75")
    - else
      .circle_profile__image.freelancer__image= freelancer.name_initials


  .list__group
    .list__title
      = "#{freelancer.name} "
      - if is_verified(freelancer)
        span.list__verified.zmdi.zmdi-check-circle

    .list__city
      - freelancer_address = "#{"#{freelancer.city}, " if freelancer.city.present?}#{"#{freelancer.state}, " if freelancer.state.present?}#{freelancer.country.upcase}"
      = "#{freelancer_address}. #{params.dig(:search, :address).present? ? "#{distance_from(freelancer)} miles away" : "" }"

    .list__rating
    - @stars = freelancer_avg_rating(freelancer)
    - @stars.each do |star|
      i class=star
    / - if freelancer.freelancer_reviews_count > 0
    /   a class="reviews__counter" href="/company/freelancers/#{freelancer.id}#reviews" data-turbolinks="false"
    /     = freelancer_ratings_link(freelancer)

    .list__desc
      = freelancer.tagline

    .tags
      - if !freelancer.job_types.nil? and freelancer.job_types.kind_of?(Hash)
        - freelancer.job_types.each do |index, value|
          .tag.tag--hollow
            = I18n.t("enumerize.job_types.#{index}")
          - freelancer.job_functions_for_job_type(index).first(2).each do |job_function|
            .tag.tag--grey
              = job_function
