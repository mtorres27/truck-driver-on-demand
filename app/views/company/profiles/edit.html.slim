- content_for :secondary do
  = simple_form_for(@company, url: company_profile_path) do |f|
    = f.hidden_field :enforce_profile_edit, value: true
    .action-bar
        h2.heading-h2.heading-h2--action-bar Edit Your Profile 
        .action-bar__actions
          = f.button :submit, "Update", class: "btn btn--primary"
          a.btn.btn--secondary href=company_profile_path(@company) Cancel

    .grid-h
      .grid-cell.grid-cell--33
        h2.heading-h2 A profile pic says a 1000 words.        
      .grid-cell.grid-cell--67
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--33
            .company-profile__image style="width: 200px; height: 200px; margin: auto"
              =image_tag(@company.avatar_url, id: "company-edit-profile__avatar")
              .freelancer-profile__image-upload onclick="updateProfilePicture()"
                span class="zmdi zmdi-camera-add"
            = f.file_field :avatar, label: false, :accept => 'image/png,image/gif,image/jpeg', class: "file-input--hidden", id: "edit-company-profile-avatar"

          .grid-cell.grid-cell--67
            .grid-h.grid-h--no-margin
              .grid-cell.grid-cell--100
                = f.input :name, required: true, label: "Company Name", placeholder: "Enter a Company Name."
              .grid-cell.grid-cell--100
                = f.input :contact_name, required: true, label: "Contact Name", placeholder: "Enter your preferred Company Contact Name."
              .grid-cell.grid-cell--100
                = f.input :phone_number, as: :string, label: "Phone Number", placeholder: "Your Contact's Phone Number"
              .grid-cell.grid-cell--100
                = f.input :email, required: true, as: :string, label: "Email Address", placeholder: "Enter your preferred Email Address."
          
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Enter your address so we can find you the closest freelancers.
      .grid-cell.grid-cell--67  
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            = f.input :address, as: :string, label: "HQ Address", placeholder: "Enter the address of your company's Headquarters."
          .grid-cell.grid-cell--100
            = f.input :line2, as: :string, required: false, label: "Address Line 2", placeholder: "Enter line 2 address of your company's Headquarters."
          .grid-cell.grid-cell--50
            = f.input :city, as: :string, label: "City", placeholder: "Enter the city of your company's Headquarters."
          .grid-cell.grid-cell--50
            = f.input :state, as: :string, label: "State/Province", placeholder: "Enter the State/Province of your company's Headquarters."
          .grid-cell.grid-cell--50
            = f.input :postal_code, as: :string, label: "ZIP/Postal Code", placeholder: "Enter the zip / postal code of your company's Headquarters."
          .grid-cell.grid-cell--50
            = f.input :country, required: true, label: "Country", prompt: "Select Country"
          .grid-cell.grid-cell--50
            = f.input :sales_tax_number, required: false, label: "Business Tax Number", placeholder: "Enter the company tax number."
          .grid-cell.grid-cell--50
            = f.input :contract_preference, required: true, prompt: "Select", label: "Work Order Preference"
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Tell them about your company. To attract the best talent you have to put your best foot forward.
      .grid-cell.grid-cell--67  
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            = f.input :description, as: :text, label: "About the company", placeholder: "Describe your company", :input_html => { :class => 'form__profile-bio-textarea' }
          .grid-cell.grid-cell--50
            = f.input :established_in, as: :integer, label: "Year Est"
          .grid-cell.grid-cell--50
            = f.input :number_of_employees, required: true, prompt: "Select", label: "# Employees"
          .grid-cell.grid-cell--50
            = f.input :number_of_offices, as: :integer, label: "# Offices"
          .grid-cell.grid-cell--50
            = f.input :website, as: :string, label: "Website", placeholder: "Enter Company's Website URL"
          .grid-cell.grid-cell--100
            = f.input :area, as: :string, label: "Service Areas", placeholder: "Enter the areas your company services (separate multiple areas with commas)."
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Select the specialities of your company
      .grid-cell.grid-cell--67  
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            .form__field-label Company Markets
            - if @company.errors.full_messages.include?("Keywords can't be blank")
              .has-error
                .help-block
                  | One market must be selected.
            .company-profile__checkboxes
              - I18n.t('enumerize.freelancer_keywords').each do |index, value|
                - tag_name = "company[keywords][#{index.to_s}]"
                - if @company.keywords and @company.keywords.include?(index.to_s)
                  - checked = true
                - else
                  - checked = false
                .company-profile__checkbox
                  = check_box_tag tag_name, "1", checked
                  = value
          .grid-cell.grid-cell--100
            .form__field-label Company Skills
            - if @company.errors.full_messages.include?("Skills can't be blank")
              .has-error
                .help-block
                  | One market must be selected.
            .company-profile__checkboxes
              - I18n.t('enumerize.freelancer_skills').each do |index, value|
                - tag_name = "company[skills][#{index.to_s}]"
                - if @company.skills and @company.skills.include?(index.to_s)
                  - checked = true
                - else
                  - checked = false
                .company-profile__checkbox
                  = check_box_tag tag_name, "1", checked
                  = value  
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 A portfolio of successful projects gives your company credibility with freelancers
      .grid-cell.grid-cell--67  
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--50
            #company_installs
              h3.heading-h3 # of AV Projects Completed
              = f.simple_fields_for :company_installs do |install_form|
                = render "company_install_fields", f: install_form
            .buttons
              = link_to_add_association 'Add # of Projects', f, :company_installs, class: "btn btn--secondary"
          .grid-cell.grid-cell--50
            #featured_projects
              h3.heading-h3 Featured AV Projects
              = f.simple_fields_for :featured_projects do |project_form|
                = render "featured_project_fields", f: project_form
            .buttons
              = link_to_add_association 'Add Project', f, :featured_projects, class: "btn btn--secondary"
      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
        h2.heading-h2 Give your company profile some personality with a custom background
      .grid-cell.grid-cell--67  
        .grid-h.grid-h--no-margin
          .grid-cell.grid-cell--100
            .form__field-label Profile Header
            .company-profile__image--header
              = image_tag(@company.profile_header_url, id: "company-edit-profile__header")
              .freelancer-profile__image-upload onclick="updateHeaderImage()"
                span class="zmdi zmdi-camera-add"
            = f.file_field :profile_header, label: false, :accept => 'image/png,image/gif,image/jpeg', class: "file-input--hidden", id: "edit-company-profile-header"
          .grid-cell.grid-cell--50
            = f.input :header_color, required: true, label: "Wallpaper Color", placeholder: "FF6C38"
          .grid-cell.grid-cell--50  
            = f.input :header_source, label: "Display color/wallpaper in header", prompt: "Select"
      
      

      .grid-cell.grid-cell--100
        hr/
      .grid-cell.grid-cell--33
      
      .grid-cell.grid-cell--67
        .buttons
          = f.button :submit, class: "btn btn--primary", label: "Update"
          a.btn.btn--secondary href=company_profile_path(@company)
            | Cancel
      

    / .result-content
      
        / .company-profile__item
        /   .company-profile__title
        /     | Profile Header
        /   .company-profile__image--header
        /     = image_tag(@company.profile_header_url, id: "company-edit-profile__header")
        /     .freelancer-profile__image-upload onclick="updateHeaderImage()"
        /       span class="fa fa-camera"
        /   = f.file_field :profile_header, label: false, :accept => 'image/png,image/gif,image/jpeg', class: "file-input--hidden", id: "edit-company-profile-header"
        / .company-profile__item
        /   .company-profile__title
        /     | Profile Picture
        /   .company-profile__image style="width: 135px; height: 135px;"
        /     =image_tag(@company.avatar_url, id: "company-edit-profile__avatar")
        /     .freelancer-profile__image-upload onclick="updateProfilePicture()"
        /       span class="fa fa-camera"
        /   = f.file_field :avatar, label: false, :accept => 'image/png,image/gif,image/jpeg', class: "file-input--hidden", id: "edit-company-profile-avatar"
        / .company-profile__item
        /   .company-profile__title
        /     | Wallpaper Colour
        /   = f.input :header_color, required: true, label: false, placeholder: "FF6C38"

        / .company-profile__item
        /   .company-profile__title
        /     | Header Source
        /   = f.input :header_source, label: false, prompt: "Select"

        / .company-profile__item
        /   .company-profile__title
        /     | Company Name
        /   = f.input :name, required: true, label: false, placeholder: "Enter a Company Name."
        / .company-profile__item
        /   .company-profile__title
        /     | Contact Name
        /   = f.input :contact_name, required: true, label: false, placeholder: "Enter your preferred Company Contact Name."
        / .company-profile__item
        /   .company-profile__title
        /     | Contact Email
        /   = f.input :email, required: true, as: :string, label: false, placeholder: "Enter your preferred Email Address."
        / .company-profile__item
        /   .company-profile__title
        /     | Sales Tax No.
        /   = f.input :sales_tax_number, required: false, label: false, placeholder: "Enter the company tax number."
        / .company-profile__item
        /   .company-profile__title
        /     | HQ Company Address
        /   = f.input :address, as: :string, label: false, placeholder: "Enter the address of your company's Headquarters."
        / .company-profile__item
        /   .company-profile__title
        /     | Address Line 2
        /   = f.input :line2, as: :string, label: false, placeholder: "Enter line 2 address of your company's Headquarters."
        / .company-profile__item
        /   .company-profile__title
        /     | City
        /   = f.input :city, as: :string, label: false, placeholder: "Enter the city of your company's Headquarters."
        / .company-profile__item.state_line  class="#{(@current_company.country=='ca')? 'hidden' : ''}"
        /   .company-profile__title
        /     | State
        /   = f.input :state, as: :string, label: false, placeholder: "Enter the state of your company's Headquarters."
/ .company-profile__item.province_line class="#{(@current_company.country!='ca')? 'hidden' : ''}"
/   .company-profile__title
/     | Province
/   = f.input :province, required: true, label: false, prompt: "Select Province"
        / .company-profile__item
        /   .company-profile__title
        /     | ZIP/Postal Code
        /   = f.input :postal_code, as: :string, label: false, placeholder: "Enter the zip / postal code of your company's Headquarters."
        / .company-profile__item
        /   .company-profile__title
        /     | Country
        /   = f.input :country, required: true, label: false, prompt: "Select Country"

        / .company-profile__item
        /   .company-profile__title
        /     | Service Areas
        /   = f.input :area, as: :string, label: false, placeholder: "Enter the areas your company services (separate multiple areas with commas)."


        / .company-profile__item
        /   .company-profile__title
        /     | Website
        /   = f.input :website, as: :string, label: false, placeholder: "Enter Company's Website URL"
        / .company-profile__item
        /   .company-profile__title
        /     | Phone Number
        /   = f.input :phone_number, as: :string, label: false, placeholder: "Your Contact's Phone Number"
        / .company-profile__item
        /   .company-profile__title
        /     | Work Order Type Preference
        /   = f.input :contract_preference, required: true, prompt: "Select", label: false
        / .company-profile__item
        /   .company-profile__title
        /     | Number of Offices
        /   = f.input :number_of_offices, as: :integer, label: false
        / .company-profile__item
        /   .company-profile__title
        /     | About the Company
        /   = f.input :description, as: :text, label: false, placeholder: "Describe your company."
        / .company-profile__item
        /   .company-profile__title
        /     | Year Company was Established
        /   = f.input :established_in, as: :integer, label: false
        / .company-profile__item
        /   .company-profile__title
        /     | Number of Employees
        /   = f.input :number_of_employees, required: true, prompt: "Select", label: false
        / .company-profile__item
        /   .company-profile__title
        /     | Company Markets
        /   - if @company.errors.full_messages.include?("Keywords can't be blank")
        /     .has-error
        /       .help-block
        /         | One market must be selected.
        /   .company-profile__checkboxes
        /     - I18n.t('enumerize.freelancer_keywords').each do |index, value|
        /       - tag_name = "company[keywords][#{index.to_s}]"
        /       - if @company.keywords and @company.keywords.include?(index.to_s)
        /         - checked = true
        /       - else
        /         - checked = false
        /       .company-profile__checkbox
        /         = check_box_tag tag_name, "1", checked
        /         = value

        / .company-profile__item
        /   .company-profile__title
        /     | Company Skills
        /   - if @company.errors.full_messages.include?("Skills can't be blank")
        /     .has-error
        /       .help-block
        /         | One market must be selected.
        /   .company-profile__checkboxes
        /     - I18n.t('enumerize.freelancer_skills').each do |index, value|
        /       - tag_name = "company[skills][#{index.to_s}]"
        /       - if @company.skills and @company.skills.include?(index.to_s)
        /         - checked = true
        /       - else
        /         - checked = false
        /       .company-profile__checkbox
        /         = check_box_tag tag_name, "1", checked
        /         = value

        / .job-details
        /   #company_installs
        /     .company-profile__title
        /       | Company Installs (by year)
        /     = f.simple_fields_for :company_installs do |install_form|
        /       = render "company_install_fields", f: install_form
        /     .links
        /       = link_to_add_association 'Add Install', f, :company_installs, class: "btn btn-default"

        / .job-details
        /   #featured_projects
        /     .company-profile__title
        /       | Featured Projects
        /       = f.simple_fields_for :featured_projects do |project_form|
        /         = render "featured_project_fields", f: project_form
        /       .links.add-new-project
        /         = link_to_add_association 'Add Project', f, :featured_projects, class: "btn btn-default"

        / .form-actions
        /   = f.button :submit, class: "btn-primary--active", label: "Update Profile"
        /   a.btn-ghost--active.margin-8px href=company_profile_path(@company)
        /     | Cancel


javascript:
  function toggle_province(country){
    if (country == "ca"){
      $(".province_line").removeClass('hidden');
      $(".state_line").addClass('hidden');
    }
    else{
      $('#company_province').val('');
      $(".province_line").addClass('hidden');
      $(".state_line").removeClass('hidden');
    }
  }

  $(document).ready(function() {
    if ($('#company_country').val() != ""){
      toggle_province($('#company_country').val())
    }
    $('#company_country').on('change', function(){
      toggle_province($(this).val())
    });
  });

  var updateHeaderImage = function() {
    $("#edit-company-profile-header").click();
    $("#edit-company-profile-header").on('change', function(e) {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#company-edit-profile__header");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result);
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  var updateProfilePicture = function() {
    $("#edit-company-profile-avatar").click();
    $("#edit-company-profile-avatar").on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#company-edit-profile__avatar");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  function uploadFeaturedProject (index) {
    if (index != undefined) {
      var ref = $("#company_featured_projects_attributes_"+index+"_file");
    } else {
      var ref = $(".add-new-project").prev('div').find(".nested_fields").find(".file-input--hidden");
    }


    ref.on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $(this).parent().parent().find(".freelancer-profile__image").find(".authorable_attachment--full").find("img");
      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });

    ref.click();
  }