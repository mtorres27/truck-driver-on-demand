- content_for :secondary do
  .result-wrapper
    .result-header
      .result-header__text
        | Edit Company Profile
    
    .result-content
      = simple_form_for(@company, url: company_profile_path) do |f|
        .company-profile__item
          .company-profile__title
            | Company Name
          = f.input :name, required: true, label: false, placeholder: "Enter a Company Name."
        .company-profile__item
          .company-profile__title
            | Contact Name
          = f.input :contact_name, required: true, label: false, placeholder: "Enter your preferred Company Contact Name."
        .company-profile__item
          .company-profile__title
            | Country
          = f.input :country, required: true, label: false, prompt: "Select Country"
        .company-profile__item
          .company-profile__title
            | Service Areas
          = f.input :area, as: :string, label: false, placeholder: "Enter the areas your company services (separate multiple areas with commas)."
        .company-profile__item
          .company-profile__title
            | HQ Company Address
          = f.input :address, as: :string, label: false, placeholder: "Enter the address of your company's Headquarters."
        .company-profile__item
          .company-profile__title
            | Contact Email
          = f.input :email, required: true, as: :string, label: false, placeholder: "Enter your preferred Email Address."
        .company-profile__item
          .company-profile__title
            | Website
          = f.input :website, as: :string, label: false, placeholder: "Enter Company's Website URL"
        .company-profile__item
          .company-profile__title
            | Phone Number
          = f.input :phone_number, as: :string, label: false, placeholder: "Your Contact's Phone Number"
        .company-profile__item
          .company-profile__title
            | Work Order Type Preference
          = f.input :contract_preference, required: true, prompt: "Select", label: false
        .company-profile__item
          .company-profile__title
            | Number of Offices
          = f.input :number_of_offices, as: :integer, label: false
        .company-profile__item
          .company-profile__title
            | About the Company
          = f.input :description, as: :text, label: false, placeholder: "Describe your company."
        .company-profile__item
          .company-profile__title
            | Year Company was Established
          = f.input :established_in, as: :integer, label: false
        .company-profile__item
          .company-profile__title
            | Number of Employees
          = f.input :number_of_employees, required: true, prompt: "Select", label: false
        .company-profile__item
          .company-profile__title
            | Company Markets
          - if @company.errors.full_messages.include?("Keywords can't be blank")
            .has-error
              .help-block
                | One market must be selected.
          .company-profile__checkboxes
            - I18n.t('enumerize.freelancer_keywords').each do |index, value|
              - tag_name = "company[keywords][#{index.to_s}]"
              - if @company.keywords and @company.keywords.include?(index.to_s)
                - checked = true
              - else
                - checked = false
              .company-profile__checkbox
                = check_box_tag tag_name, "1", checked
                = value
          
        .company-profile__item
          .company-profile__title
            | Company Skills
          - if @company.errors.full_messages.include?("Skills can't be blank")
            .has-error
              .help-block
                | One market must be selected.
          .company-profile__checkboxes
            - I18n.t('enumerize.freelancer_skills').each do |index, value|
              - tag_name = "company[skills][#{index.to_s}]"
              - if @company.skills and @company.skills.include?(index.to_s)
                - checked = true
              - else
                - checked = false
              .company-profile__checkbox
                = check_box_tag tag_name, "1", checked
                = value
        
        .job-details
          #company_installs
            .company-profile__title
              | Company Installs (by year)
            = f.simple_fields_for :company_installs do |install_form|
              = render "company_install_fields", f: install_form
            .links
              = link_to_add_association 'Add Install', f, :company_installs, class: "btn btn-default"

        .job-details
          #featured_projects
            .company-profile__title
              | Featured Projects
              = f.simple_fields_for :featured_projects do |project_form|
                = render "featured_project_fields", f: project_form
              .links.add-new-project
                = link_to_add_association 'Add Project', f, :featured_projects, class: "btn btn-default"

        .company-profile__item
          .company-profile__title
            | Profile Header
          .company-profile__image--header
            = image_tag(@company.profile_header_url, id: "company-edit-profile__header")
            .freelancer-profile__image-upload onclick="updateHeaderImage()"
              span class="fa fa-camera" 
          = f.file_field :profile_header, label: false, :accept => 'image/png,image/gif,image/jpeg', class: "file-input--hidden", id: "edit-company-profile-header"
        .company-profile__item
          .company-profile__title
            | Profile Picture
          .company-profile__image style="width: 135px; height: 135px;"
            =image_tag(@company.avatar_url, id: "company-edit-profile__avatar")
            .freelancer-profile__image-upload onclick="updateProfilePicture()"
              span class="fa fa-camera" 
          = f.file_field :avatar, label: false, :accept => 'image/png,image/gif,image/jpeg', class: "file-input--hidden", id: "edit-company-profile-avatar"

        .company-profile__item
          .company-profile__title
            | Wallpaper Colour
          = f.input :header_color, required: true, label: false, placeholder: "FF6C38"  

        .company-profile__item
          .company-profile__title
            | Header Source
          = f.input :header_source, label: false, prompt: "Select"
    
        .form-actions
          a.btn.btn-secondary href=company_profile_path(@company)
            | Cancel
          = " "
          = f.button :submit, class: "btn btn-primary", label: "Update Profile"

javascript:
  var updateHeaderImage = function() {
    $("#edit-company-profile-header").click();
    $("#edit-company-profile-header").on('change', function(e) {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#company-edit-profile__header");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result);
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  var updateProfilePicture = function() {
    $("#edit-company-profile-avatar").click();
    $("#edit-company-profile-avatar").on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $("#company-edit-profile__avatar");

      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });
  }

  function uploadFeaturedProject (index) {
    if (index != undefined) {
      var ref = $("#company_featured_projects_attributes_"+index+"_file");
    } else {
      var ref = $(".add-new-project").prev('div').find(".nested_fields").find(".file-input--hidden");
    }


    ref.on('change', function() {
      var imgPath = $(this)[0].value;
      var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
      var image_holder = $(this).parent().parent().find(".freelancer-profile__image").find(".authorable_attachment--full").find("img");
      if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();
          reader.onload = function (e) {
            image_holder.attr('src', e.target.result)
          }

          reader.readAsDataURL($(this)[0].files[0]);
        }
      } else {
        alert("Only images can be selected.");
      }
    });

    ref.click();
  }